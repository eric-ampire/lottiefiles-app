/**
 * Generated by
 *    $ ./gradlew buildSrcLibs
 * Re-run when you add a new dependency to the build
 *
 * Find which updates are available by running
 *     $ ./gradlew refreshVersions
 * And edit the file `versions.properties`
 *
 * See https://github.com/jmfayard/refreshVersions
 */
object Libs {
  const val gradle_plugin = "com.android.tools.build:gradle:_"

  // Todo put at the right place
  const val play_service_plugin = "com.google.gms:google-services:4.3.8"
  const val firebase_crashlytics_plugin = "com.google.firebase:firebase-crashlytics-gradle:2.2.0"

  const val activity_compose = "androidx.activity:activity-compose:_"
  const val startup_runtime = "androidx.startup:startup-runtime:_"
  const val navigation_compose = "androidx.navigation:navigation-compose:2.4.0-alpha06"
  const val appcompat = "androidx.appcompat:appcompat:_"
  const val preference_ktx = "androidx.preference:preference-ktx:_"

  const val compose_compiler = "androidx.compose.compiler:compiler:_"
  const val compose_material = "androidx.compose.material:material:_"
  const val compose_runtime_livedata = "androidx.compose.runtime:runtime-livedata:_"
  const val compose_material_icons_extended = "androidx.compose.material:material-icons-extended:_"
  const val compose_ui = "androidx.compose.ui:ui:_"
  const val compose_ui_viewbinding = "androidx.compose.ui:ui-viewbinding:_"
  const val compose_ui_test_junit4 = "androidx.compose.ui:ui-test-junit4:_"
  const val compose_ui_tooling = "androidx.compose.ui:ui-tooling:_"
  const val compose_ui_tooling_preview = "androidx.compose.ui:ui-tooling-preview:_"

  const val core_ktx = "androidx.core:core-ktx:_"
  const val lifecycle_runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:_"
  const val androidx_test_ext_junit = "androidx.test.ext:junit:_"
  const val google_material = "com.google.android.material:material:_"

  const val coil_core = "io.coil-kt:coil:1.3.0"
  const val coil_compose = "io.coil-kt:coil-compose:1.3.0"


  // Todo: this lib is about glide
  private const val accompanist = "com.google.accompanist"
  const val accompanist_glide = "$accompanist:accompanist-glide:0.13.0"
  const val accompanist_flowlayout = "$accompanist:accompanist-flowlayout:_"
  const val accompanist_pager = "$accompanist:accompanist-pager:_"
  const val accompanist_pager_indicators = "$accompanist:accompanist-pager-indicators:_"
  const val accompanist_swiperefresh = "$accompanist:accompanist-swiperefresh:_"
  const val accompanist_insets = "$accompanist:accompanist-insets:_"
  const val accompanist_navigation_animation = "$accompanist:accompanist-navigation-animation:_"
  const val accompanist_placeholder_material = "$accompanist:accompanist-placeholder-material:_"
  const val accompanist_placeholder = "$accompanist:accompanist-placeholder:_"
  const val accompanist_permissions = "$accompanist:accompanist-permissions:_"

  const val hilt_gradle_plugin = "com.google.dagger:hilt-android-gradle-plugin:_"
  const val hilt_android = "com.google.dagger:hilt-android:_"
  const val hilt_android_compiler = "com.google.dagger:hilt-android-compiler:_"
  const val hilt_navigation_compose = "androidx.hilt:hilt-navigation-compose:1.0.0-alpha03"

  const val junit4 = "junit:junit:_"
  const val junit_jupiter_api = "org.junit.jupiter:junit-jupiter-api:_"
  const val junit_jupiter_engine = "org.junit.jupiter:junit-jupiter-engine:_"

  // Todo: Put this in the version.properties file
  const val firebase_bom = "com.google.firebase:firebase-bom:28.1.0"
  const val firebase_messaging_directboot =
    "com.google.firebase:firebase-messaging-directboot:20.2.0"
  const val firebase_crashlytics = "com.google.firebase:firebase-crashlytics-ktx"
  const val firebase_analytics = "com.google.firebase:firebase-analytics-ktx"
  const val firebase_auth = "com.google.firebase:firebase-auth-ktx"
  const val firebase_firestore = "com.google.firebase:firebase-firestore-ktx"
  const val firebase_storage = "com.google.firebase:firebase-storage-ktx"
  const val firebase_config = "com.google.firebase:firebase-config-ktx"
  const val firebase_messaging = "com.google.firebase:firebase-messaging-ktx"
  const val firebase_in_app_messaging = "com.google.firebase:firebase-inappmessaging-display-ktx"

  const val kotlin_gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:_"

  const val ktor_client_core = "io.ktor:ktor-client-core:_"
  const val ktor_client_cio = "io.ktor:ktor-client-cio:_"
  const val ktor_client_android = "io.ktor:ktor-client-android:_"
  const val ktor_serialization = "io.ktor:ktor-client-serialization:_"

  const val kotlin_coroutine_bom = "org.jetbrains.kotlinx:kotlinx-coroutines-bom:_"
  const val kotlin_coroutine_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core"
  const val kotlin_coroutine_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android"
  const val kotlin_coroutine_play_service = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services"
  const val kotlin_coroutine_test = "org.jetbrains.kotlinx:kotlinx-coroutines-test"

  // Todo : Put the version in the right place
  const val google_maps_ktx = "com.google.maps.android:maps-ktx:2.1.1"
  const val google_maps_utils_ktx = "com.google.maps.android:maps-utils-ktx:2.1.1"

  const val google_place_ktx = "com.google.maps.android:places-ktx:_"

  const val play_service_auth = "com.google.android.gms:play-services-auth:19.0.0"
  const val play_service_core = "com.google.android.play:core:1.10.0"
  const val play_service_core_ktx = "com.google.android.play:core-ktx:1.8.1"
  const val play_service_maps = "com.google.android.gms:play-services-maps:17.0.0"
  const val play_service_location = "com.google.android.gms:play-services-location:17.0.0"

  const val mavericks_testing = "com.airbnb.android:mavericks-testing:_"
  const val mavericks_core = "com.airbnb.android:mavericks:_"
  const val mavericks_mocking = "com.airbnb.android:mavericks-mocking:_"
  const val mavericks_compose = "com.airbnb.android:mavericks-compose:_"

  const val kotest_runner_junit5 = "io.kotest:kotest-runner-junit5:_"
  const val kotest_property = "io.kotest:kotest-property:_"
  const val kotest_core = "io.kotest:kotest-assertions-core:_"
  const val kotest_gradle_plugin = "io.kotest:kotest-plugins-pitest:_"
  const val kotest_engine_jvm = "io.kotest:kotest-framework-engine-jvm:_"
  const val kotest_assertions_core = "io.kotest:kotest-assertions-core:_"

  const val mockk_core = "io.mockk:mockk:_"
  const val mockk_android = "io.mockk:mockk-android:_"

  // Todo: Put this in the version.properties file
  const val prettytime = "org.ocpsoft.prettytime:prettytime:4.0.4.Final"
  const val landscapist_glide = "com.github.skydoves:landscapist-glide:_"
  const val timber = "com.jakewharton.timber:timber:_"
  const val smartlocation = "io.nlopez.smartlocation:library:_"
  const val leku = "com.schibstedspain.android:leku:8.0.0"
  const val localization = "com.zeugmasolutions.localehelper:locale-helper-android:_"
  const val ksp_api = "com.google.devtools.ksp:symbol-processing-api:1.5.21-1.0.0-beta07"
  const val leakcanary_android = "com.squareup.leakcanary:leakcanary-android:2.7"

  const val lottie_compose = "com.airbnb.android:lottie-compose:_"
  const val lottie = "com.airbnb.android:lottie:3.7.0"

  const val room_compiler = "androidx.room:room-compiler:_"
  const val room_runtime = "androidx.room:room-runtime:_"
  const val room_testing = "androidx.room:room-testing:_"

  const val koin_core = "io.insert-koin:koin-core:_"
  const val koin_test_junit5 = "io.insert-koin:koin-test-junit5:_"
  const val koin_android = "io.insert-koin:koin-android:_"
  const val koin_androidx_workmanager = "io.insert-koin:koin-androidx-workmanager:_"
  const val koin_androidx_compose = "io.insert-koin:koin-androidx-compose:_"

  // Todo : Put this in version.properties file
  const val orbit_mvi_viewmodel = "org.orbit-mvi:orbit-viewmodel:4.2.0"
  const val orbit_mvi_core = "org.orbit-mvi:orbit-core:4.2.0"
  const val orbit_mvi_test = "org.orbit-mvi:orbit-test:4.2.0"
}
